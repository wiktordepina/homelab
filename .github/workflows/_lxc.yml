name: LXC

on:
  workflow_call:
    inputs:
      vmid:
        type: string
        required: true
        description: lxc id
      tf_action:
        type: string
        required: true
        description: terraform action
        default: plan
  workflow_dispatch:
    inputs:
      vmid:
        type: string
        required: true
        description: lxc id
      tf_action:
        type: choice
        required: true
        description: terraform action
        default: plan
        options:
          - plan
          - apply
          - plan_destroy
          - destroy

concurrency: lxc

env:
  PM_USER: ${{ secrets.PM_USER }}
  PM_PASS: ${{ secrets.PM_PASS }}
  DNS_TSIG_KEY: ${{ secrets.DNS_TSIG_KEY }}

jobs:
  RunLXC:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform
        id: terraform
        run: ./run/execute_runner terraform_lxc ${{ inputs.vmid }} ${{ inputs.tf_action }}
      - name: Ansible
        id: ansible
        if: ${{ inputs.tf_action == 'apply' }}
        run: ./run/execute_runner ansible_lxc ${{ inputs.vmid }}
      - name: Generate Step Summary
        run: |
          echo "### LXC ${{ inputs.vmid }}" >> $GITHUB_STEP_SUMMARY
          tf_status=':white_check_mark:'
          [[ '${{ steps.terraform.outcome }}' -ne 'success' ]] && tf_status=':x:'
          an_status=':white_check_mark:'
          [[ '${{ steps.ansible.outcome }}' -ne 'success' ]] && an_status=':x:'
          echo "${tf_status} Terraform ${{ inputs.tf_action }} step" >> $GITHUB_STEP_SUMMARY
          if [[ '${{ inputs.tf_action }}' -ne 'apply' ]]; then
            echo ':no_entry_sign: subsequent Ansible step has been skipped' >> $GITHUB_STEP_SUMMARY
          else
            echo "${an_status} Ansible step - status: ${{ steps.terraform.outcome }}" >> $GITHUB_STEP_SUMMARY
          fi
